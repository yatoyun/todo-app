// This file is auto-generated by @hey-api/openapi-ts

export type entity_Todo = {
    completed?: boolean;
    created_at?: string;
    description?: string;
    id?: string;
    title?: string;
    updated_at?: string;
    user_id?: string;
};

export type usecase_CreateTodoRequest = {
    completed?: boolean;
    description: string;
    title: string;
    user_id: string;
};

export type usecase_CreateUserRequest = {
    auth0_id: string;
    email: string;
    name: string;
    role: 'admin' | 'user';
};

export type role = 'admin' | 'user';

export type usecase_TodoResponse = {
    completed?: boolean;
    createdAt?: string;
    description?: string;
    id?: string;
    title?: string;
    updatedAt?: string;
};

export type usecase_UpdateTodoRequest = {
    completed?: boolean;
    description?: string;
    title?: string;
};

export type usecase_UpdateUserRequest = {
    email?: string;
    name?: string;
    role?: string;
};

export type usecase_UserResponse = {
    createdAt?: string;
    email?: string;
    id?: string;
    name?: string;
    role?: string;
    updatedAt?: string;
};

export type GetTodosResponse = Array<usecase_TodoResponse>;

export type PostTodosData = {
    /**
     * Todo
     */
    requestBody: usecase_CreateTodoRequest;
};

export type PostTodosResponse = usecase_TodoResponse;

export type GetTodosByIdData = {
    /**
     * Todo ID
     */
    id: string;
};

export type GetTodosByIdResponse = entity_Todo;

export type PutTodosByIdData = {
    /**
     * Todo ID
     */
    id: string;
    /**
     * Todo
     */
    requestBody: usecase_UpdateTodoRequest;
};

export type PutTodosByIdResponse = usecase_TodoResponse;

export type DeleteTodosByIdData = {
    /**
     * Todo ID
     */
    id: string;
};

export type DeleteTodosByIdResponse = void;

export type GetUsersResponse = Array<usecase_UserResponse>;

export type PostUsersData = {
    /**
     * user
     */
    requestBody: usecase_CreateUserRequest;
};

export type PostUsersResponse = usecase_UserResponse;

export type GetUsersByIdData = {
    /**
     * ID
     */
    id: string;
};

export type GetUsersByIdResponse = usecase_UserResponse;

export type PutUsersByIdData = {
    /**
     * ID
     */
    id: string;
    /**
     * user
     */
    requestBody: usecase_UpdateUserRequest;
};

export type PutUsersByIdResponse = string;

export type DeleteUsersByIdData = {
    /**
     * ID
     */
    id: string;
};

export type DeleteUsersByIdResponse = string;

export type GetUsersAuth0ByAuth0IdData = {
    /**
     * Auth0ID
     */
    auth0Id: string;
};

export type GetUsersAuth0ByAuth0IdResponse = usecase_UserResponse;

export type $OpenApiTs = {
    '/todos': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: Array<usecase_TodoResponse>;
            };
        };
        post: {
            req: PostTodosData;
            res: {
                /**
                 * Created
                 */
                201: usecase_TodoResponse;
            };
        };
    };
    '/todos/{id}': {
        get: {
            req: GetTodosByIdData;
            res: {
                /**
                 * OK
                 */
                200: entity_Todo;
            };
        };
        put: {
            req: PutTodosByIdData;
            res: {
                /**
                 * OK
                 */
                200: usecase_TodoResponse;
            };
        };
        delete: {
            req: DeleteTodosByIdData;
            res: {
                /**
                 * No Content
                 */
                204: void;
            };
        };
    };
    '/users': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: Array<usecase_UserResponse>;
            };
        };
        post: {
            req: PostUsersData;
            res: {
                /**
                 * Created
                 */
                201: usecase_UserResponse;
            };
        };
    };
    '/users/{id}': {
        get: {
            req: GetUsersByIdData;
            res: {
                /**
                 * OK
                 */
                200: usecase_UserResponse;
            };
        };
        put: {
            req: PutUsersByIdData;
            res: {
                /**
                 * User updated successfully
                 */
                200: string;
            };
        };
        delete: {
            req: DeleteUsersByIdData;
            res: {
                /**
                 * User deleted successfully
                 */
                200: string;
            };
        };
    };
    '/users/auth0/{auth0_id}': {
        get: {
            req: GetUsersAuth0ByAuth0IdData;
            res: {
                /**
                 * OK
                 */
                200: usecase_UserResponse;
            };
        };
    };
};