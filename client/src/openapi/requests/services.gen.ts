// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from './core/CancelablePromise';
import { OpenAPI } from './core/OpenAPI';
import { request as __request } from './core/request';
import type { GetTodosResponse, PostTodosData, PostTodosResponse, GetTodosByIdData, GetTodosByIdResponse, PutTodosByIdData, PutTodosByIdResponse, DeleteTodosByIdData, DeleteTodosByIdResponse, GetUsersResponse, PostUsersData, PostUsersResponse, GetUsersByIdData, GetUsersByIdResponse, PutUsersByIdData, PutUsersByIdResponse, DeleteUsersByIdData, DeleteUsersByIdResponse, GetUsersAuth0ByAuth0IdData, GetUsersAuth0ByAuth0IdResponse } from './types.gen';

export class GetTodosService {
    /**
     * todo一覧を取得
     * @returns usecase_TodoResponse OK
     * @throws ApiError
     */
    public static getTodos(): CancelablePromise<GetTodosResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/todos'
        });
    }
    
}

export class CreateTodoService {
    /**
     * todoを作成
     * @param data The data for the request.
     * @param data.requestBody Todo
     * @returns usecase_TodoResponse Created
     * @throws ApiError
     */
    public static postTodos(data: PostTodosData): CancelablePromise<PostTodosResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/todos',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class GetTodoByIdService {
    /**
     * todoを取得
     * @param data The data for the request.
     * @param data.id Todo ID
     * @returns entity_Todo OK
     * @throws ApiError
     */
    public static getTodosById(data: GetTodosByIdData): CancelablePromise<GetTodosByIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/todos/{id}',
            path: {
                id: data.id
            }
        });
    }
    
}

export class UpdateTodoService {
    /**
     * todoを更新
     * @param data The data for the request.
     * @param data.id Todo ID
     * @param data.requestBody Todo
     * @returns usecase_TodoResponse OK
     * @throws ApiError
     */
    public static putTodosById(data: PutTodosByIdData): CancelablePromise<PutTodosByIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/todos/{id}',
            path: {
                id: data.id
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class DeleteTodoService {
    /**
     * todoを削除
     * @param data The data for the request.
     * @param data.id Todo ID
     * @returns void No Content
     * @throws ApiError
     */
    public static deleteTodosById(data: DeleteTodosByIdData): CancelablePromise<DeleteTodosByIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/todos/{id}',
            path: {
                id: data.id
            }
        });
    }
    
}

export class GetUsersService {
    /**
     * user一覧を取得する
     * user一覧を取得する
     * @returns usecase_UserResponse OK
     * @throws ApiError
     */
    public static getUsers(): CancelablePromise<GetUsersResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/users'
        });
    }
    
}

export class CreateUserService {
    /**
     * userを作成する
     * userを作成する
     * @param data The data for the request.
     * @param data.requestBody user
     * @returns usecase_UserResponse Created
     * @throws ApiError
     */
    public static postUsers(data: PostUsersData): CancelablePromise<PostUsersResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/users',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class GetUserByIdService {
    /**
     * userをIDで取得する
     * userをIDで取得する
     * @param data The data for the request.
     * @param data.id ID
     * @returns usecase_UserResponse OK
     * @throws ApiError
     */
    public static getUsersById(data: GetUsersByIdData): CancelablePromise<GetUsersByIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/users/{id}',
            path: {
                id: data.id
            }
        });
    }
    
}

export class UpdateUserService {
    /**
     * userを更新する
     * userを更新する
     * @param data The data for the request.
     * @param data.id ID
     * @param data.requestBody user
     * @returns string User updated successfully
     * @throws ApiError
     */
    public static putUsersById(data: PutUsersByIdData): CancelablePromise<PutUsersByIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/users/{id}',
            path: {
                id: data.id
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class DeleteUserService {
    /**
     * userを削除する
     * userを削除する
     * @param data The data for the request.
     * @param data.id ID
     * @returns string User deleted successfully
     * @throws ApiError
     */
    public static deleteUsersById(data: DeleteUsersByIdData): CancelablePromise<DeleteUsersByIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/users/{id}',
            path: {
                id: data.id
            }
        });
    }
    
}

export class GetUserByAuth0IdService {
    /**
     * userをAuth0IDで取得する
     * userをAuth0IDで取得する
     * @param data The data for the request.
     * @param data.auth0Id Auth0ID
     * @returns usecase_UserResponse OK
     * @throws ApiError
     */
    public static getUsersAuth0ByAuth0Id(data: GetUsersAuth0ByAuth0IdData): CancelablePromise<GetUsersAuth0ByAuth0IdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/users/auth0/{auth0_id}',
            path: {
                auth0_id: data.auth0Id
            }
        });
    }
    
}